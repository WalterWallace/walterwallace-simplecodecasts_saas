{"_id":"omelette","_rev":"21-4d8c4b5915e6a69cb7ce99a7a9f58270","name":"omelette","description":"Omelette.js Simple Autocompletion Helper for Node","dist-tags":{"latest":"0.3.1"},"versions":{"0.0.2":{"name":"omelette","description":"Omelette.js Simple Autocompletion Helper for Node","keywords":["autocompletion","complete","bash completion","zsh completion"],"author":{"name":"Fatih Kadir Akın","email":"fka@koding.com"},"version":"0.0.2","licenses":[{"type":"MIT","url":"https://raw.github.com/koding/kd/master/LICENSE"}],"engines":{"node":">=0.8.0"},"main":"./omelette.js","homepage":"https://github.com/f/omelette","bugs":"https://github.com/f/omelette/issues","repository":{"type":"git","url":"git://github.com/f/omelette.git"},"_id":"omelette@0.0.2","dist":{"shasum":"eae08d879520e7505a4d3ea20861b664f95a039d","tarball":"http://registry.npmjs.org/omelette/-/omelette-0.0.2.tgz"},"_npmVersion":"1.1.65","_npmUser":{"name":"fkadev","email":"fatihkadirakin@gmail.com"},"maintainers":[{"name":"fkadev","email":"fatihkadirakin@gmail.com"}],"directories":{}},"0.1.0":{"name":"omelette","description":"Omelette.js Simple Autocompletion Helper for Node","keywords":["autocompletion","complete","bash completion","zsh completion"],"author":{"name":"Fatih Kadir Akın","email":"fka@koding.com"},"version":"0.1.0","licenses":[{"type":"MIT","url":"https://raw.github.com/koding/kd/master/LICENSE"}],"engines":{"node":">=0.8.0"},"main":"./src/omelette.js","homepage":"https://github.com/f/omelette","bugs":"https://github.com/f/omelette/issues","repository":{"type":"git","url":"git://github.com/f/omelette.git"},"_id":"omelette@0.1.0","dist":{"shasum":"31cc7eb472a513c07483d24d3e1bf164cb0d23b8","tarball":"http://registry.npmjs.org/omelette/-/omelette-0.1.0.tgz"},"_npmVersion":"1.1.65","_npmUser":{"name":"fkadev","email":"fatihkadirakin@gmail.com"},"maintainers":[{"name":"fkadev","email":"fatihkadirakin@gmail.com"}],"directories":{}},"0.2.0":{"name":"omelette","description":"Omelette.js Simple Autocompletion Helper for Node","keywords":["autocompletion","complete","bash completion","zsh completion"],"author":{"name":"Fatih Kadir Akın","email":"fka@koding.com"},"version":"0.2.0","licenses":[{"type":"MIT","url":"https://raw.github.com/koding/kd/master/LICENSE"}],"engines":{"node":">=0.8.0"},"main":"./src/omelette.js","homepage":"https://github.com/f/omelette","bugs":{"url":"https://github.com/f/omelette/issues"},"repository":{"type":"git","url":"git://github.com/f/omelette.git"},"_id":"omelette@0.2.0","_shasum":"516d814a10f84cb7b2d4f03e30d635b681370480","_from":".","_npmVersion":"1.4.10","_npmUser":{"name":"fkadev","email":"fka@fatihak.in"},"maintainers":[{"name":"fkadev","email":"fatihkadirakin@gmail.com"}],"dist":{"shasum":"516d814a10f84cb7b2d4f03e30d635b681370480","tarball":"http://registry.npmjs.org/omelette/-/omelette-0.2.0.tgz"},"directories":{}},"0.2.1":{"name":"omelette","description":"Omelette.js Simple Autocompletion Helper for Node","keywords":["autocompletion","complete","bash completion","zsh completion"],"author":{"name":"Fatih Kadir Akın","email":"fka@fatihak.in"},"version":"0.2.1","licenses":[{"type":"MIT"}],"engines":{"node":">=0.8.0"},"main":"./src/omelette.js","homepage":"https://github.com/f/omelette","bugs":{"url":"https://github.com/f/omelette/issues"},"repository":{"type":"git","url":"git://github.com/f/omelette.git"},"_id":"omelette@0.2.1","_shasum":"469452732da01bd7ac86d14ca324e46f5720f706","_from":".","_npmVersion":"1.4.10","_npmUser":{"name":"fkadev","email":"fka@fatihak.in"},"maintainers":[{"name":"fkadev","email":"fatihkadirakin@gmail.com"}],"dist":{"shasum":"469452732da01bd7ac86d14ca324e46f5720f706","tarball":"http://registry.npmjs.org/omelette/-/omelette-0.2.1.tgz"},"directories":{}},"0.3.0":{"name":"omelette","description":"Omelette.js Simple Autocompletion Helper for Node","keywords":["autocompletion","complete","bash completion","zsh completion"],"author":{"name":"Fatih Kadir Akın","email":"fka@fatihak.in"},"version":"0.3.0","licenses":[{"type":"MIT"}],"engines":{"node":">=0.8.0"},"main":"./src/omelette.js","homepage":"https://github.com/f/omelette","bugs":{"url":"https://github.com/f/omelette/issues"},"repository":{"type":"git","url":"git://github.com/f/omelette.git"},"_id":"omelette@0.3.0","_shasum":"92a2e501bce1a9a042f6988639153c27bacf9a98","_from":".","_npmVersion":"1.4.10","_npmUser":{"name":"fkadev","email":"fka@fatihak.in"},"maintainers":[{"name":"fkadev","email":"fatihkadirakin@gmail.com"}],"dist":{"shasum":"92a2e501bce1a9a042f6988639153c27bacf9a98","tarball":"http://registry.npmjs.org/omelette/-/omelette-0.3.0.tgz"},"directories":{}},"0.3.1":{"name":"omelette","description":"Omelette.js Simple Autocompletion Helper for Node","keywords":["autocompletion","complete","bash completion","zsh completion"],"author":{"name":"Fatih Kadir Akın","email":"fka@fatihak.in"},"version":"0.3.1","licenses":[{"type":"MIT"}],"engines":{"node":">=0.8.0"},"main":"./src/omelette.js","homepage":"https://github.com/f/omelette","bugs":{"url":"https://github.com/f/omelette/issues"},"repository":{"type":"git","url":"git://github.com/f/omelette.git"},"_id":"omelette@0.3.1","_shasum":"73e26defe0cfd7e93497db60da758bec201087b6","_from":".","_npmVersion":"1.4.10","_npmUser":{"name":"fkadev","email":"fka@fatihak.in"},"maintainers":[{"name":"fkadev","email":"fatihkadirakin@gmail.com"}],"dist":{"shasum":"73e26defe0cfd7e93497db60da758bec201087b6","tarball":"http://registry.npmjs.org/omelette/-/omelette-0.3.1.tgz"},"directories":{}}},"readme":"# Omelette.js v0.3.1\n\n[![Build Status](https://travis-ci.org/f/omelette.png?branch=master)](https://travis-ci.org/f/omelette)\n\n```bash\nnpm install omelette\n```\n\nOmelette is a simple, template based autocompletion tool for Node projects.\n\nYou just have to decide your program name and CLI fragments.\n\n```coffeescript\nomelette \"githubber <module> <command> <suboption>\"\n```\n\nAnd you are almost done!\n\n![Example](https://raw.github.com/f/omelette/master/resources/omelette.gif)\n\nA more detailed template spec:\n\n```coffeescript\nomelette \"<programname>[|<shortname>|<short>|<...>] <module> [<command> <suboption> <...>]\"\n```\n\n## Quickstart\n\nImplementing omelette is very easy.\n\n```coffeescript\n#!/usr/bin/env coffee\n\nomelette = require \"omelette\"\ncomp = omelette \"programname|prgmnm|prgnm <firstargument>\"\n\ncomp.on \"firstargument\", ->\n  @reply [\"hello\", \"cruel\", \"world\"]\n\ncomp.init()\n```\n\n**You can add multiple names to programs**\n\n### Code\n\nIt's based on a simple CLI template.\n\nLet's think we have a executable file with the name **githubber**, *in a global path*.\n\nAnd in our program, code will be:\n\n```coffeescript\n#!/usr/bin/env coffee\n\nomelette = require \"omelette\"\n\n# Write your CLI template.\ncomplete = omelette \"githubber|gh <action> <user> <repo>\"\n\n# Bind events for every template part.\ncomplete.on \"action\", -> @reply [\"clone\", \"update\", \"push\"]\n\ncomplete.on \"user\", (action)-> @reply fs.readdirSync \"/Users/\"\n\ncomplete.on \"repo\", (user)->\n  @reply [\n    \"http://github.com/#{user}/helloworld\"\n    \"http://github.com/#{user}/blabla\"\n  ]\n\n# Initialize the omelette.\ncomplete.init()\n\n# If you want to have a setup feature, you can use `omeletteInstance.setupShellInitFile()` function.\nif ~process.argv.indexOf '--setup'\n  complete.setupShellInitFile()\n\n# Rest is yours\nconsole.log \"Your program's default workflow.\"\nconsole.log process.argv\n```\n\nIf you like oldschool:\n\n```javascript\nvar fs = require(\"fs\"),\n    omelette = require(\"omelette\");\n\n// Write your CLI template.\nvar complete = omelette(\"githubber|gh <action> <user> <repo>\");\n\ncomplete.on(\"action\", function() {\n  this.reply([\"clone\", \"update\", \"push\"]);\n});\n\ncomplete.on(\"user\", function(action) {\n  this.reply(fs.readdirSync(\"/Users/\"));\n});\n\ncomplete.on(\"repo\", function(user) {\n  this.reply([\n    \"http://github.com/\" + user + \"/helloworld\",\n    \"http://github.com/\" + user + \"/blabla\"\n  ]);\n});\n\n// Initialize the omelette.\ncomplete.init();\n\n// If you want to have a setup feature, you can use `omeletteInstance.setupShellInitFile()` function.\nif (~process.argv.indexOf '--setup') {\n  complete.setupShellInitFile();\n}\n\n// Rest is yours.\nconsole.log(\"Your program's default workflow.\");\nconsole.log(process.argv);\n```\n\n`complete.reply` is the completion replier. You should pass the options into that method.\n\n### Install\n\n#### Automated Install\n\nInstalling, and making your users install the autocompletion feature is very simple.\n\nYou can use simply use `setupShellInitFile` function.\n\n```javascript\n// If you want to write file,\ncomplete.setupShellInitFile('~/.my_bash_profile');\n```\n\nIf you use Bash, it will create a file at `~/.<program-name>/completion.sh` and\nappend a loader code to `~/.bash_profile` file.\n\nIf you use Zsh, it just append a loader code to `~/.zshrc` file.\n\n*TL;DR: It does the Manual Install part, basically.*\n\n#### Manual Install\n\n*(You should add these instructions to your project's README)*\n\nIn **zsh**, you can write these:\n\n```bash\necho '. <(./githubber --completion)' >> .zshrc\n```\n\nIn **bash**, you should write:\n\n```bash\n./githubber --completion >> ~/githubber.completion.sh\necho 'source ~/githubber.completion.sh' >> .bash_profile\n```\n\nThat's all!\n\nNow you have an autocompletion system for your CLI tool.\n\n## Additions\n\nThere are some useful additions for omelette.\n\n### Parameters\n\nCallbacks have three parameters:\n\n  - The number of fragment *just for global event*\n  - The parent word.\n  - The whole command line buffer allow you to parse and reply as you wish.\n\n### Global Event\n\nYou also can be able to listen all fragments by \"complete\" event.\n\n```coffeescript\ncomplete.on \"complete\", (fragment, word, line)-> @reply [\"hello\", \"world\"]\n```\n\n### Numbered Arguments\n\nYou also can listen events by its order.\n\n```coffeescript\ncomplete.on \"$1\", (word, line)-> @reply [\"hello\", \"world\"]\n```\n\n### Short Names\n\nYou can set short name of an executable:\n\nIn this example, `githubber` is long and `gh` is shorter examples.\n\n```coffeescript\nomelette \"githubber|gh <module> <command> <suboption>\"\n```\n\n## Test\n\nNow, you can try it in your shell.\n\n```bash\ngit clone https://github.com/f/omelette\ncd omelette/examples\nalias githubber=\"./githubber\" # The app should be global, completion will search it on global level.\n./githubber --setup --debug # --setup is not provided by omelette, you should proxy it.\n# (reload bash, or source ~/.bash_profile)\nomelette-debug-githubber # See Debugging section\ngithubber<tab>\nghb<tab> # short alias\ngh<tab> # short alias\n```\n\n### Debugging\n\n`--debug` option generates a function called `omlette-debug-<programname>`.\n(`omlette-debug-githubber` in this example).\n\nWhen you run `omlette-debug-<programname>`, it will create aliases for your\napplication. (`githubber` and `gh` in this example).\n\nLong name,\n\n```bash\n$ githubber<tab>\nclone update push\n```\n\nOr short name:\n\n```bash\n$ gh<tab>\nclone update push\n```\n\nThen you can start easily.\n\n```bash\n$ ./githubber<tab>\nclone update push\n```\n\n```bash\n$ ./githubber cl<tab>\n$ ./githubber clone<tab>\nGuest fka\n```\n\n```bash\n$ ./githubber clone fka<tab>\n$ ./githubber clone fka http://github.com/fka/<tab>\nhttp://github.com/fka/helloworld\nhttp://github.com/fka/blabla\n```\n\n## Who uses?\n\n**Windows Azure** uses Omelette to support autocompletion in [azure-cli](https://github.com/WindowsAzure/azure-sdk-tools-xplat).\n\n## Contribute\n\nI need your contributions to make that work better!\n\n## License\n\nThis project licensed under MIT.\n\n[![Build Status](https://www.codeship.io/projects/1ccaea50-8ffe-0131-9189-166ee657e7b4/status)](http://codeship.io/f/omelette)\n","maintainers":[{"name":"fkadev","email":"fatihkadirakin@gmail.com"}],"time":{"modified":"2014-06-09T18:12:16.394Z","created":"2013-04-26T12:16:34.031Z","0.0.2":"2013-04-26T12:16:37.651Z","0.1.0":"2013-04-28T13:55:20.015Z","0.2.0":"2014-06-09T16:25:00.576Z","0.2.1":"2014-06-09T16:26:55.178Z","0.3.0":"2014-06-09T18:11:39.523Z","0.3.1":"2014-06-09T18:12:16.394Z"},"author":{"name":"Fatih Kadir Akın","email":"fka@fatihak.in"},"repository":{"type":"git","url":"git://github.com/f/omelette.git"},"users":{"sanusart":true,"jamescostian":true,"chocolateboy":true,"maximilianschmitt":true},"homepage":"https://github.com/f/omelette","keywords":["autocompletion","complete","bash completion","zsh completion"],"bugs":{"url":"https://github.com/f/omelette/issues"},"readmeFilename":"README.md","_attachments":{},"_etag":"\"7Q0WU0Q134KDV0I5O0T58U6YP\""}